
03_Push_LED.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001e4  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000378  08000380  00001380  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000378  08000378  00001380  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000378  08000378  00001380  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000378  08000380  00001380  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000378  08000378  00001378  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800037c  0800037c  0000137c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001380  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000380  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000380  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001380  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000031c  00000000  00000000  000013b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000db  00000000  00000000  000016cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  000017a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000002d  00000000  00000000  000017f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000dbc1  00000000  00000000  0000181d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000005c8  00000000  00000000  0000f3de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004f814  00000000  00000000  0000f9a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0005f1ba  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000054  00000000  00000000  0005f200  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000042  00000000  00000000  0005f254  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000360 	.word	0x08000360

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000360 	.word	0x08000360

080001d4 <main>:
#define GPIOCEN (1U<<2)
#define LED (1U<<5)
#define LED1 (1U<<1)
#define LED2 (1U<<7)
#define button (1U<<13)
int main(void){
 80001d4:	b480      	push	{r7}
 80001d6:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= GPIOAEN;
 80001d8:	4b36      	ldr	r3, [pc, #216]	@ (80002b4 <main+0xe0>)
 80001da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001dc:	4a35      	ldr	r2, [pc, #212]	@ (80002b4 <main+0xe0>)
 80001de:	f043 0301 	orr.w	r3, r3, #1
 80001e2:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->AHB1ENR |= GPIOBEN;
 80001e4:	4b33      	ldr	r3, [pc, #204]	@ (80002b4 <main+0xe0>)
 80001e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001e8:	4a32      	ldr	r2, [pc, #200]	@ (80002b4 <main+0xe0>)
 80001ea:	f043 0302 	orr.w	r3, r3, #2
 80001ee:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->AHB1ENR |= GPIOCEN;
 80001f0:	4b30      	ldr	r3, [pc, #192]	@ (80002b4 <main+0xe0>)
 80001f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001f4:	4a2f      	ldr	r2, [pc, #188]	@ (80002b4 <main+0xe0>)
 80001f6:	f043 0304 	orr.w	r3, r3, #4
 80001fa:	6313      	str	r3, [r2, #48]	@ 0x30
	GPIOA->MODER |= (1U<<10);
 80001fc:	4b2e      	ldr	r3, [pc, #184]	@ (80002b8 <main+0xe4>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	4a2d      	ldr	r2, [pc, #180]	@ (80002b8 <main+0xe4>)
 8000202:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000206:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~ (1U<<11);
 8000208:	4b2b      	ldr	r3, [pc, #172]	@ (80002b8 <main+0xe4>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a2a      	ldr	r2, [pc, #168]	@ (80002b8 <main+0xe4>)
 800020e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8000212:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |=(1U<<2);
 8000214:	4b29      	ldr	r3, [pc, #164]	@ (80002bc <main+0xe8>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a28      	ldr	r2, [pc, #160]	@ (80002bc <main+0xe8>)
 800021a:	f043 0304 	orr.w	r3, r3, #4
 800021e:	6013      	str	r3, [r2, #0]
	GPIOB->MODER &=~ (1U<<3);
 8000220:	4b26      	ldr	r3, [pc, #152]	@ (80002bc <main+0xe8>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a25      	ldr	r2, [pc, #148]	@ (80002bc <main+0xe8>)
 8000226:	f023 0308 	bic.w	r3, r3, #8
 800022a:	6013      	str	r3, [r2, #0]
	GPIOC->MODER |= (1U<<14);
 800022c:	4b24      	ldr	r3, [pc, #144]	@ (80002c0 <main+0xec>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	4a23      	ldr	r2, [pc, #140]	@ (80002c0 <main+0xec>)
 8000232:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000236:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~ (1U<<15);
 8000238:	4b21      	ldr	r3, [pc, #132]	@ (80002c0 <main+0xec>)
 800023a:	681b      	ldr	r3, [r3, #0]
 800023c:	4a20      	ldr	r2, [pc, #128]	@ (80002c0 <main+0xec>)
 800023e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8000242:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~ (1U<<24);
 8000244:	4b1e      	ldr	r3, [pc, #120]	@ (80002c0 <main+0xec>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	4a1d      	ldr	r2, [pc, #116]	@ (80002c0 <main+0xec>)
 800024a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800024e:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~ (1U<<27);
 8000250:	4b1b      	ldr	r3, [pc, #108]	@ (80002c0 <main+0xec>)
 8000252:	681b      	ldr	r3, [r3, #0]
 8000254:	4a1a      	ldr	r2, [pc, #104]	@ (80002c0 <main+0xec>)
 8000256:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 800025a:	6013      	str	r3, [r2, #0]
	while(1){
		if((GPIOC->IDR& button) ==0){
 800025c:	4b18      	ldr	r3, [pc, #96]	@ (80002c0 <main+0xec>)
 800025e:	691b      	ldr	r3, [r3, #16]
 8000260:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8000264:	2b00      	cmp	r3, #0
 8000266:	d112      	bne.n	800028e <main+0xba>
			GPIOA->ODR|=LED;
 8000268:	4b13      	ldr	r3, [pc, #76]	@ (80002b8 <main+0xe4>)
 800026a:	695b      	ldr	r3, [r3, #20]
 800026c:	4a12      	ldr	r2, [pc, #72]	@ (80002b8 <main+0xe4>)
 800026e:	f043 0320 	orr.w	r3, r3, #32
 8000272:	6153      	str	r3, [r2, #20]
			GPIOB->ODR|=LED1;
 8000274:	4b11      	ldr	r3, [pc, #68]	@ (80002bc <main+0xe8>)
 8000276:	695b      	ldr	r3, [r3, #20]
 8000278:	4a10      	ldr	r2, [pc, #64]	@ (80002bc <main+0xe8>)
 800027a:	f043 0302 	orr.w	r3, r3, #2
 800027e:	6153      	str	r3, [r2, #20]
			GPIOC->ODR|=LED2;
 8000280:	4b0f      	ldr	r3, [pc, #60]	@ (80002c0 <main+0xec>)
 8000282:	695b      	ldr	r3, [r3, #20]
 8000284:	4a0e      	ldr	r2, [pc, #56]	@ (80002c0 <main+0xec>)
 8000286:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800028a:	6153      	str	r3, [r2, #20]
 800028c:	e7e6      	b.n	800025c <main+0x88>
		}else{
			GPIOA->ODR&=~LED;
 800028e:	4b0a      	ldr	r3, [pc, #40]	@ (80002b8 <main+0xe4>)
 8000290:	695b      	ldr	r3, [r3, #20]
 8000292:	4a09      	ldr	r2, [pc, #36]	@ (80002b8 <main+0xe4>)
 8000294:	f023 0320 	bic.w	r3, r3, #32
 8000298:	6153      	str	r3, [r2, #20]
			GPIOB->ODR&=~LED1;
 800029a:	4b08      	ldr	r3, [pc, #32]	@ (80002bc <main+0xe8>)
 800029c:	695b      	ldr	r3, [r3, #20]
 800029e:	4a07      	ldr	r2, [pc, #28]	@ (80002bc <main+0xe8>)
 80002a0:	f023 0302 	bic.w	r3, r3, #2
 80002a4:	6153      	str	r3, [r2, #20]
			GPIOC->ODR&=~LED2;
 80002a6:	4b06      	ldr	r3, [pc, #24]	@ (80002c0 <main+0xec>)
 80002a8:	695b      	ldr	r3, [r3, #20]
 80002aa:	4a05      	ldr	r2, [pc, #20]	@ (80002c0 <main+0xec>)
 80002ac:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80002b0:	6153      	str	r3, [r2, #20]
		if((GPIOC->IDR& button) ==0){
 80002b2:	e7d3      	b.n	800025c <main+0x88>
 80002b4:	40023800 	.word	0x40023800
 80002b8:	40020000 	.word	0x40020000
 80002bc:	40020400 	.word	0x40020400
 80002c0:	40020800 	.word	0x40020800

080002c4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c4:	480d      	ldr	r0, [pc, #52]	@ (80002fc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002c6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002c8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002cc:	480c      	ldr	r0, [pc, #48]	@ (8000300 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ce:	490d      	ldr	r1, [pc, #52]	@ (8000304 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002d0:	4a0d      	ldr	r2, [pc, #52]	@ (8000308 <LoopForever+0xe>)
  movs r3, #0
 80002d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d4:	e002      	b.n	80002dc <LoopCopyDataInit>

080002d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002da:	3304      	adds	r3, #4

080002dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002e0:	d3f9      	bcc.n	80002d6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002e2:	4a0a      	ldr	r2, [pc, #40]	@ (800030c <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e4:	4c0a      	ldr	r4, [pc, #40]	@ (8000310 <LoopForever+0x16>)
  movs r3, #0
 80002e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e8:	e001      	b.n	80002ee <LoopFillZerobss>

080002ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002ec:	3204      	adds	r2, #4

080002ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002f0:	d3fb      	bcc.n	80002ea <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 80002f2:	f000 f811 	bl	8000318 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 80002f6:	f7ff ff6d 	bl	80001d4 <main>

080002fa <LoopForever>:

LoopForever:
  b LoopForever
 80002fa:	e7fe      	b.n	80002fa <LoopForever>
  ldr   r0, =_estack
 80002fc:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000300:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000304:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000308:	08000380 	.word	0x08000380
  ldr r2, =_sbss
 800030c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000310:	2000001c 	.word	0x2000001c

08000314 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000314:	e7fe      	b.n	8000314 <ADC_IRQHandler>
	...

08000318 <__libc_init_array>:
 8000318:	b570      	push	{r4, r5, r6, lr}
 800031a:	4d0d      	ldr	r5, [pc, #52]	@ (8000350 <__libc_init_array+0x38>)
 800031c:	4c0d      	ldr	r4, [pc, #52]	@ (8000354 <__libc_init_array+0x3c>)
 800031e:	1b64      	subs	r4, r4, r5
 8000320:	10a4      	asrs	r4, r4, #2
 8000322:	2600      	movs	r6, #0
 8000324:	42a6      	cmp	r6, r4
 8000326:	d109      	bne.n	800033c <__libc_init_array+0x24>
 8000328:	4d0b      	ldr	r5, [pc, #44]	@ (8000358 <__libc_init_array+0x40>)
 800032a:	4c0c      	ldr	r4, [pc, #48]	@ (800035c <__libc_init_array+0x44>)
 800032c:	f000 f818 	bl	8000360 <_init>
 8000330:	1b64      	subs	r4, r4, r5
 8000332:	10a4      	asrs	r4, r4, #2
 8000334:	2600      	movs	r6, #0
 8000336:	42a6      	cmp	r6, r4
 8000338:	d105      	bne.n	8000346 <__libc_init_array+0x2e>
 800033a:	bd70      	pop	{r4, r5, r6, pc}
 800033c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000340:	4798      	blx	r3
 8000342:	3601      	adds	r6, #1
 8000344:	e7ee      	b.n	8000324 <__libc_init_array+0xc>
 8000346:	f855 3b04 	ldr.w	r3, [r5], #4
 800034a:	4798      	blx	r3
 800034c:	3601      	adds	r6, #1
 800034e:	e7f2      	b.n	8000336 <__libc_init_array+0x1e>
 8000350:	08000378 	.word	0x08000378
 8000354:	08000378 	.word	0x08000378
 8000358:	08000378 	.word	0x08000378
 800035c:	0800037c 	.word	0x0800037c

08000360 <_init>:
 8000360:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000362:	bf00      	nop
 8000364:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000366:	bc08      	pop	{r3}
 8000368:	469e      	mov	lr, r3
 800036a:	4770      	bx	lr

0800036c <_fini>:
 800036c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800036e:	bf00      	nop
 8000370:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000372:	bc08      	pop	{r3}
 8000374:	469e      	mov	lr, r3
 8000376:	4770      	bx	lr
