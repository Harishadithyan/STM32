
02_MULTI_LED_ON.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001fc  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000390  08000398  00001398  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000390  08000390  00001398  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000390  08000390  00001398  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000390  08000398  00001398  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000390  08000390  00001390  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000394  08000394  00001394  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001398  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000398  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000398  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001398  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000370  00000000  00000000  000013c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000139  00000000  00000000  00001738  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  00001878  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000033  00000000  00000000  000018c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000dbbb  00000000  00000000  000018fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000005e5  00000000  00000000  0000f4b6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004f80e  00000000  00000000  0000fa9b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0005f2a9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000080  00000000  00000000  0005f2ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000046  00000000  00000000  0005f36c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000378 	.word	0x08000378

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000378 	.word	0x08000378

080001d4 <main>:
#define GPIOCEN (1U<<2)
#define LED (1U<<5)
#define LED1 (1U<<1)
#define LED2 (1U<<7)

int main(void){
 80001d4:	b580      	push	{r7, lr}
 80001d6:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= GPIOAEN;
 80001d8:	4b31      	ldr	r3, [pc, #196]	@ (80002a0 <main+0xcc>)
 80001da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001dc:	4a30      	ldr	r2, [pc, #192]	@ (80002a0 <main+0xcc>)
 80001de:	f043 0301 	orr.w	r3, r3, #1
 80001e2:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->AHB1ENR |= GPIOBEN;
 80001e4:	4b2e      	ldr	r3, [pc, #184]	@ (80002a0 <main+0xcc>)
 80001e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001e8:	4a2d      	ldr	r2, [pc, #180]	@ (80002a0 <main+0xcc>)
 80001ea:	f043 0302 	orr.w	r3, r3, #2
 80001ee:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->AHB1ENR |= GPIOCEN;
 80001f0:	4b2b      	ldr	r3, [pc, #172]	@ (80002a0 <main+0xcc>)
 80001f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001f4:	4a2a      	ldr	r2, [pc, #168]	@ (80002a0 <main+0xcc>)
 80001f6:	f043 0304 	orr.w	r3, r3, #4
 80001fa:	6313      	str	r3, [r2, #48]	@ 0x30
	GPIOA->MODER |= (1U<<10);
 80001fc:	4b29      	ldr	r3, [pc, #164]	@ (80002a4 <main+0xd0>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	4a28      	ldr	r2, [pc, #160]	@ (80002a4 <main+0xd0>)
 8000202:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000206:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~ (1U<<11);
 8000208:	4b26      	ldr	r3, [pc, #152]	@ (80002a4 <main+0xd0>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a25      	ldr	r2, [pc, #148]	@ (80002a4 <main+0xd0>)
 800020e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8000212:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |=(1U<<2);
 8000214:	4b24      	ldr	r3, [pc, #144]	@ (80002a8 <main+0xd4>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a23      	ldr	r2, [pc, #140]	@ (80002a8 <main+0xd4>)
 800021a:	f043 0304 	orr.w	r3, r3, #4
 800021e:	6013      	str	r3, [r2, #0]
	GPIOB->MODER &=~ (1U<<3);
 8000220:	4b21      	ldr	r3, [pc, #132]	@ (80002a8 <main+0xd4>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a20      	ldr	r2, [pc, #128]	@ (80002a8 <main+0xd4>)
 8000226:	f023 0308 	bic.w	r3, r3, #8
 800022a:	6013      	str	r3, [r2, #0]
	GPIOC->MODER |= (1U<<14);
 800022c:	4b1f      	ldr	r3, [pc, #124]	@ (80002ac <main+0xd8>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	4a1e      	ldr	r2, [pc, #120]	@ (80002ac <main+0xd8>)
 8000232:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000236:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~ (1U<<15);
 8000238:	4b1c      	ldr	r3, [pc, #112]	@ (80002ac <main+0xd8>)
 800023a:	681b      	ldr	r3, [r3, #0]
 800023c:	4a1b      	ldr	r2, [pc, #108]	@ (80002ac <main+0xd8>)
 800023e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8000242:	6013      	str	r3, [r2, #0]
	while(1){
		GPIOA->ODR|=LED;
 8000244:	4b17      	ldr	r3, [pc, #92]	@ (80002a4 <main+0xd0>)
 8000246:	695b      	ldr	r3, [r3, #20]
 8000248:	4a16      	ldr	r2, [pc, #88]	@ (80002a4 <main+0xd0>)
 800024a:	f043 0320 	orr.w	r3, r3, #32
 800024e:	6153      	str	r3, [r2, #20]
		GPIOB->ODR|=LED1;
 8000250:	4b15      	ldr	r3, [pc, #84]	@ (80002a8 <main+0xd4>)
 8000252:	695b      	ldr	r3, [r3, #20]
 8000254:	4a14      	ldr	r2, [pc, #80]	@ (80002a8 <main+0xd4>)
 8000256:	f043 0302 	orr.w	r3, r3, #2
 800025a:	6153      	str	r3, [r2, #20]
		GPIOC->ODR|=LED2;
 800025c:	4b13      	ldr	r3, [pc, #76]	@ (80002ac <main+0xd8>)
 800025e:	695b      	ldr	r3, [r3, #20]
 8000260:	4a12      	ldr	r2, [pc, #72]	@ (80002ac <main+0xd8>)
 8000262:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000266:	6153      	str	r3, [r2, #20]
		delay(50000);
 8000268:	f24c 3050 	movw	r0, #50000	@ 0xc350
 800026c:	f000 f820 	bl	80002b0 <delay>
		GPIOA->ODR&=~LED;
 8000270:	4b0c      	ldr	r3, [pc, #48]	@ (80002a4 <main+0xd0>)
 8000272:	695b      	ldr	r3, [r3, #20]
 8000274:	4a0b      	ldr	r2, [pc, #44]	@ (80002a4 <main+0xd0>)
 8000276:	f023 0320 	bic.w	r3, r3, #32
 800027a:	6153      	str	r3, [r2, #20]
		GPIOB->ODR&=~LED1;
 800027c:	4b0a      	ldr	r3, [pc, #40]	@ (80002a8 <main+0xd4>)
 800027e:	695b      	ldr	r3, [r3, #20]
 8000280:	4a09      	ldr	r2, [pc, #36]	@ (80002a8 <main+0xd4>)
 8000282:	f023 0302 	bic.w	r3, r3, #2
 8000286:	6153      	str	r3, [r2, #20]
		GPIOC->ODR&=~LED2;
 8000288:	4b08      	ldr	r3, [pc, #32]	@ (80002ac <main+0xd8>)
 800028a:	695b      	ldr	r3, [r3, #20]
 800028c:	4a07      	ldr	r2, [pc, #28]	@ (80002ac <main+0xd8>)
 800028e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000292:	6153      	str	r3, [r2, #20]
		delay(50000);
 8000294:	f24c 3050 	movw	r0, #50000	@ 0xc350
 8000298:	f000 f80a 	bl	80002b0 <delay>
	while(1){
 800029c:	bf00      	nop
 800029e:	e7d1      	b.n	8000244 <main+0x70>
 80002a0:	40023800 	.word	0x40023800
 80002a4:	40020000 	.word	0x40020000
 80002a8:	40020400 	.word	0x40020400
 80002ac:	40020800 	.word	0x40020800

080002b0 <delay>:
	}
}

void delay(int n){
 80002b0:	b480      	push	{r7}
 80002b2:	b085      	sub	sp, #20
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
	for (int i=0;i<=n;i++);
 80002b8:	2300      	movs	r3, #0
 80002ba:	60fb      	str	r3, [r7, #12]
 80002bc:	e002      	b.n	80002c4 <delay+0x14>
 80002be:	68fb      	ldr	r3, [r7, #12]
 80002c0:	3301      	adds	r3, #1
 80002c2:	60fb      	str	r3, [r7, #12]
 80002c4:	68fa      	ldr	r2, [r7, #12]
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	429a      	cmp	r2, r3
 80002ca:	ddf8      	ble.n	80002be <delay+0xe>
}
 80002cc:	bf00      	nop
 80002ce:	bf00      	nop
 80002d0:	3714      	adds	r7, #20
 80002d2:	46bd      	mov	sp, r7
 80002d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d8:	4770      	bx	lr
	...

080002dc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002dc:	480d      	ldr	r0, [pc, #52]	@ (8000314 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002de:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002e0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002e4:	480c      	ldr	r0, [pc, #48]	@ (8000318 <LoopForever+0x6>)
  ldr r1, =_edata
 80002e6:	490d      	ldr	r1, [pc, #52]	@ (800031c <LoopForever+0xa>)
  ldr r2, =_sidata
 80002e8:	4a0d      	ldr	r2, [pc, #52]	@ (8000320 <LoopForever+0xe>)
  movs r3, #0
 80002ea:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002ec:	e002      	b.n	80002f4 <LoopCopyDataInit>

080002ee <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ee:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002f2:	3304      	adds	r3, #4

080002f4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002f4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002f6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002f8:	d3f9      	bcc.n	80002ee <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002fa:	4a0a      	ldr	r2, [pc, #40]	@ (8000324 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002fc:	4c0a      	ldr	r4, [pc, #40]	@ (8000328 <LoopForever+0x16>)
  movs r3, #0
 80002fe:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000300:	e001      	b.n	8000306 <LoopFillZerobss>

08000302 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000302:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000304:	3204      	adds	r2, #4

08000306 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000306:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000308:	d3fb      	bcc.n	8000302 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 800030a:	f000 f811 	bl	8000330 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 800030e:	f7ff ff61 	bl	80001d4 <main>

08000312 <LoopForever>:

LoopForever:
  b LoopForever
 8000312:	e7fe      	b.n	8000312 <LoopForever>
  ldr   r0, =_estack
 8000314:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000318:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800031c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000320:	08000398 	.word	0x08000398
  ldr r2, =_sbss
 8000324:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000328:	2000001c 	.word	0x2000001c

0800032c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800032c:	e7fe      	b.n	800032c <ADC_IRQHandler>
	...

08000330 <__libc_init_array>:
 8000330:	b570      	push	{r4, r5, r6, lr}
 8000332:	4d0d      	ldr	r5, [pc, #52]	@ (8000368 <__libc_init_array+0x38>)
 8000334:	4c0d      	ldr	r4, [pc, #52]	@ (800036c <__libc_init_array+0x3c>)
 8000336:	1b64      	subs	r4, r4, r5
 8000338:	10a4      	asrs	r4, r4, #2
 800033a:	2600      	movs	r6, #0
 800033c:	42a6      	cmp	r6, r4
 800033e:	d109      	bne.n	8000354 <__libc_init_array+0x24>
 8000340:	4d0b      	ldr	r5, [pc, #44]	@ (8000370 <__libc_init_array+0x40>)
 8000342:	4c0c      	ldr	r4, [pc, #48]	@ (8000374 <__libc_init_array+0x44>)
 8000344:	f000 f818 	bl	8000378 <_init>
 8000348:	1b64      	subs	r4, r4, r5
 800034a:	10a4      	asrs	r4, r4, #2
 800034c:	2600      	movs	r6, #0
 800034e:	42a6      	cmp	r6, r4
 8000350:	d105      	bne.n	800035e <__libc_init_array+0x2e>
 8000352:	bd70      	pop	{r4, r5, r6, pc}
 8000354:	f855 3b04 	ldr.w	r3, [r5], #4
 8000358:	4798      	blx	r3
 800035a:	3601      	adds	r6, #1
 800035c:	e7ee      	b.n	800033c <__libc_init_array+0xc>
 800035e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000362:	4798      	blx	r3
 8000364:	3601      	adds	r6, #1
 8000366:	e7f2      	b.n	800034e <__libc_init_array+0x1e>
 8000368:	08000390 	.word	0x08000390
 800036c:	08000390 	.word	0x08000390
 8000370:	08000390 	.word	0x08000390
 8000374:	08000394 	.word	0x08000394

08000378 <_init>:
 8000378:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800037a:	bf00      	nop
 800037c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800037e:	bc08      	pop	{r3}
 8000380:	469e      	mov	lr, r3
 8000382:	4770      	bx	lr

08000384 <_fini>:
 8000384:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000386:	bf00      	nop
 8000388:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800038a:	bc08      	pop	{r3}
 800038c:	469e      	mov	lr, r3
 800038e:	4770      	bx	lr
